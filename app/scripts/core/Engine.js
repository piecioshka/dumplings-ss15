define([
    'core/App',
    'core/helpers/AssetsLoader'
], function (App, AssetsLoader) {
    'use strict';

    var Engine = {
        player: undefined,
        label: undefined,
        cursors: undefined,
        map: undefined,
        layer: undefined,
        raft: undefined,

        jumpTimer: 0,
        jumpButton: undefined,

        preload: function () {
            App.game.phaser.load.image('tile-ground', AssetsLoader.IMAGES.GROUND);
            App.game.phaser.load.image('tile-monkey', AssetsLoader.IMAGES.MONKEY);
            App.game.phaser.load.tilemap('map-1', 'assets/maps/map-1.json', null, Phaser.Tilemap.TILED_JSON);
        },

        create: function () {
            App.game.phaser.physics.startSystem(Phaser.Physics.ARCADE);
            App.game.phaser.stage.backgroundColor = '#fff';

            this.map = App.game.phaser.add.tilemap('map-1');
            this.map.addTilesetImage('tile-ground');

            // Add +1 to tile ID generated by Tiled program.
            this.map.setCollision([1, 2, 4, 5]);

            this.layer = this.map.createLayer('Tile Layer 1');
            this.layer.resizeWorld();

            //App.game.phaser.physics.arcade.gravity.y = 350;

            this.player = App.game.phaser.add.sprite(0, 10, 'tile-monkey');
            App.game.phaser.physics.enable(this.player, Phaser.Physics.ARCADE);

            this.player.body.bounce.y = 0.1;
            this.player.body.collideWorldBounds = true;
            this.player.body.setSize(30, 30, 1, 1);
            this.player.body.gravity.y = 350;

            this.label = App.game.phaser.add.text(0, 0, App.game.getPlayerID().substr(0, 5), {
                font: '11px Arial',
                fill: '#000',
                align: 'center'
            });

            // Stay camera on player.
            App.game.phaser.camera.follow(this.player);

            this.cursors = App.game.phaser.input.keyboard.createCursorKeys();
            this.jumpButton = App.game.phaser.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);

            this.raft = App.game.phaser.add.sprite(0, 0, 'tile-ground');
            App.game.phaser.physics.enable(this.raft, Phaser.Physics.ARCADE);
            this.raft.body.velocity.x = 120;

            //this.raft.position.x = 4;
            console.log('##', this.raft.body);
            this.raft.y = (32 * 9);
            this.raft.x = (32 * 7);
            //this.raft.set(3);
            //this.raft.lifespan = 3;
            //this.raft.visible = false;
            //this.raft.rotation = 0.2;
        },

        update: function () {
            var self = this;
            // Enable collisions
            App.game.phaser.physics.arcade.collide(this.player, this.layer, function (sprite, tile) {
                if (tile.index === 4) {
                    console.log('am am am!!!');
                    self.map.removeTile(tile.x, tile.y);
                } else if (tile.index === 5) {
                    console.log('I am swimming!!!');
                }
            }, null, this);

            var currentRaftVelocity = self.raft.body.velocity.x;

            App.game.phaser.physics.arcade.collide(this.raft, this.layer, function (sprite, tile) {
                if (tile.index === 1) {
                    self.raft.body.velocity.x = (currentRaftVelocity > 0) ? -120 : 120;
                }
            }, null, this);

            // How much different between player and ground.
            this.player.body.velocity.x = 0;

            if (this.cursors.left.isDown) {
                this.player.body.velocity.x = -150;
            } else if (this.cursors.right.isDown) {
                this.player.body.velocity.x = 150;
            }

            if (this.jumpButton.isDown && this.player.body.onFloor() && App.game.phaser.time.now > this.jumpTimer) {
                this.player.body.velocity.y = -350;
                this.jumpTimer = App.game.phaser.time.now - 50;
            }

            this.label.x = this.player.x;
            this.label.y = this.player.y - 10;
        },

        render: function () {
            // Show bounding-box of player.
            App.game.phaser.debug.body(this.player);

            // Show technical info about player.
            // App.game.phaser.debug.bodyInfo(this.player, 16, 40);
        }
    };

    return Engine;
});
